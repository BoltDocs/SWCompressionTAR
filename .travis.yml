# TODO: There is probably a way to simplify this very explicit build matrix.
git:
  depth: 1
  submodules: false
jobs:
  include:
    # We cannot test with Swift 4.2 on macOS since Carthage doesn't work with multiple Swift versions.
    - stage: test
      language: swift
      os: osx
      osx_image: xcode10.3 # Swift 5.0
      env:
      - HOMEBREW_NO_INSTALL_CLEANUP=1
      before_install:
      - brew update
      install:
      - ./utils.py ci install-macos
      before_script:
      - ./utils.py prepare-workspace macos
      script:
      - ./utils.py ci script-macos
    - stage: test
      language: swift
      os: osx
      osx_image: xcode11.3 # Swift 5.1
      env:
      - HOMEBREW_NO_INSTALL_CLEANUP=1
      before_install:
      - brew update
      install:
      - ./utils.py ci install-macos
      before_script:
      - ./utils.py prepare-workspace macos
      script:
      - ./utils.py ci script-macos
    - stage: test
      language: swift
      os: osx
      osx_image: xcode11.4 # Swift 5.2
      env:
      - HOMEBREW_NO_INSTALL_CLEANUP=1
      before_install:
      - brew update
      install:
      - ./utils.py ci install-macos
      before_script:
      - ./utils.py prepare-workspace macos
      script:
      - ./utils.py ci script-macos
    - stage: test
      language: swift
      os: osx
      osx_image: xcode12 # Swift 5.3
      env:
      - HOMEBREW_NO_INSTALL_CLEANUP=1
      before_install:
      - brew update
      install:
      - ./utils.py ci install-macos
      before_script:
      - ./utils.py prepare-workspace macos
      script:
      - ./utils.py ci script-macos
    - stage: test
      language: generic
      os: linux
      dist: bionic
      env:
      - SWIFT_VERSION=5.0
      install:
      - ./utils.py ci install-linux
      script:
      - ./utils.py ci script-linux
    - stage: test
      language: generic
      os: linux
      dist: bionic
      env:
      - SWIFT_VERSION=5.1
      install:
      - ./utils.py ci install-linux
      script:
      - ./utils.py ci script-linux
    - stage: test
      language: generic
      os: linux
      dist: bionic
      env:
      - SWIFT_VERSION=5.2
      install:
      - ./utils.py ci install-linux
      script:
      - ./utils.py ci script-linux
    - stage: test
      language: generic
      os: linux
      dist: xenial
      env:
      - SWIFT_VERSION=5.3
      install:
      - eval "$(curl -sL https://swiftenv.fuller.li/install.sh)"
      script:
      - ./utils.py ci script-linux
    - stage: deploy
      if: tag IS present
      language: generic
      os: osx
      osx_image: xcode11.4
      env:
      - HOMEBREW_NO_INSTALL_CLEANUP=1
      env:
        secure: iavIkrus2Xd3b086nz2srMGl52yqzLuCdhyEAhMODVqkzqMQ17s10y1TNb+vkepd0HgxI9j57d5X7tfChjWuWDwE2hZKjr/Kx2DfiUr1AKQD6ymuGrq/0Vv6yL9dfPU8goFArcrsBcyVKczLtTuLCKL498ZqokkQc/3kGvzW74lv+z410MfHS9/tvToO/yXJckL6qJ2XBAiElfOO0rEkllTeCo6N3bjcHZ2o7PE0K+CHYxwNKj0TmPmuNWZ3U4fzoWzkk01re1C1l5cpSb20g+2aGyi0yYX+PomX7fIIqNq9vmmyoeNdr35yqoQv/0zFeFnps83NKmZLAjSUhiUdhlbuBLBE+w8544LOaZnMDlFmpDjgyaVnRrOh0NrBB1FwU48aGfX5ljRQmk/07FTEUjvwvGGoOpz8lrLZi148FMHEospL3Sf7d8K+Q9WdtLTGk7HCnbOVcxS6oB/SWF/Cj6n5wu+EI1floBaZEsNPR40Gd4eM/Ik/E3lDrZThGDCWQsao981wm7IfEDBR1nuMME8gpZINFANNS1+5miFaGdTnDTp4Yd5MGEFZm+K8x+TG1891NwNH1ZmKXlypJXiUzvSjbh2ViNJGekdQj9q2gj2ZFlCfHJ05adwJ4w9qRuF00HpAOD6At6EnsjDXFJeTZS5dj8fi2YsU9or8KfTFoNY=
      addons:
        homebrew:
          packages:
          - carthage
          - sourcekitten
          update: true
      install:
      - gem install -N jazzy
      - gem update -N cocoapods
      before_deploy:
      - >
        if ! [ "$BEFORE_DEPLOY_RUN" ]; then
          export BEFORE_DEPLOY_RUN=1;
          ./utils.py prepare-workspace macos -T
          ./utils.py ci before-deploy;
        fi
      deploy:
      - provider: releases
        skip_cleanup: true
        api_key: $GITHUB_TOKEN
        file: "SWCompression.framework.zip"
        on:
          tags: true
      - provider: pages
        skip_cleanup: true
        github_token: $GITHUB_TOKEN
        local_dir: docs
        on:
          tags: true
          # Don't upload documentation if it is a test release.
          condition: $(git describe) != *"test"*
